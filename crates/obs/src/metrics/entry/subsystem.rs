/// The metrics subsystem is a subgroup of metrics within a namespace
#[derive(Debug, Clone, PartialEq, Eq)]
pub enum MetricSubsystem {
    Cache,
    CapacityRaw,
    CapacityUsable,
    Drive,
    Interface,
    Memory,
    CpuAvg,
    StorageClass,
    FileDescriptor,
    GoRoutine,
    Io,
    Nodes,
    Objects,
    Bucket,
    Process,
    Replication,
    Requests,
    RequestsRejected,
    Time,
    Ttfb,
    Traffic,
    Software,
    Syscall,
    Usage,
    Quota,
    Ilm,
    Tier,
    Scanner,
    Iam,
    Kms,
    Notify,
    Lambda,
    Audit,
    Webhook,
}

impl MetricSubsystem {
    pub fn as_str(&self) -> &'static str {
        match self {
            Self::Cache => "cache",
            Self::CapacityRaw => "capacity_raw",
            Self::CapacityUsable => "capacity_usable",
            Self::Drive => "drive",
            Self::Interface => "if",
            Self::Memory => "mem",
            Self::CpuAvg => "cpu_avg",
            Self::StorageClass => "storage_class",
            Self::FileDescriptor => "file_descriptor",
            Self::GoRoutine => "go_routine",
            Self::Io => "io",
            Self::Nodes => "nodes",
            Self::Objects => "objects",
            Self::Bucket => "bucket",
            Self::Process => "process",
            Self::Replication => "replication",
            Self::Requests => "requests",
            Self::RequestsRejected => "requests_rejected",
            Self::Time => "time",
            Self::Ttfb => "requests_ttfb",
            Self::Traffic => "traffic",
            Self::Software => "software",
            Self::Syscall => "syscall",
            Self::Usage => "usage",
            Self::Quota => "quota",
            Self::Ilm => "ilm",
            Self::Tier => "tier",
            Self::Scanner => "scanner",
            Self::Iam => "iam",
            Self::Kms => "kms",
            Self::Notify => "notify",
            Self::Lambda => "lambda",
            Self::Audit => "audit",
            Self::Webhook => "webhook",
        }
    }
}
